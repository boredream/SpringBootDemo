package ${package.Controller};


import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.boredream.springbootdemo.entity.${entity};
import com.boredream.springbootdemo.entity.dto.PageResultDTO;
import com.boredream.springbootdemo.entity.dto.ResponseDTO;
import com.boredream.springbootdemo.entity.dto.${entity}QueryDTO;
import com.boredream.springbootdemo.service.${table.serviceName};
import com.boredream.springbootdemo.utils.PageUtil;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@RestController
@RequestMapping("/${table.name}")
@Api(tags = {"$!{table.comment}"})
public class ${table.controllerName} {

    @Autowired
    private ${table.serviceName} service;

    @ApiOperation(value = "分页查询${table.comment}")
    @GetMapping("/page")
    public ResponseDTO<PageResultDTO<${entity}>> queryByPage(${entity}QueryDTO dto, Long curUserId) {
        QueryWrapper<${entity}> wrapper = new QueryWrapper<${entity}>().eq("userId", curUserId);
        Page<${entity}> page = PageUtil.convert2QueryPage(dto);
        Page<${entity}> resultDto = service.page(page, wrapper);
        return ResponseDTO.success(PageUtil.convert2PageResult(resultDto));
    }

    @ApiOperation(value = "添加$!{table.comment}")
    @PostMapping
    public ResponseDTO<Boolean> add(@RequestBody @Validated ${entity} body, Long curUserId) {
        body.setUserId(curUserId);
        return ResponseDTO.success(service.save(body));
    }

    @ApiOperation(value = "修改$!{table.comment}")
    @PutMapping("/{id}")
    public ResponseDTO<Boolean> update(@PathVariable("id") Long id, @RequestBody @Validated ${entity} body) {
        body.setId(id);
        return ResponseDTO.success(service.updateById(body));
    }

    @ApiOperation(value = "删除$!{table.comment}")
    @DeleteMapping("/{id}")
    public ResponseDTO<Boolean> delete(@PathVariable("id") Long id) {
        return ResponseDTO.success(service.removeById(id));
    }

}
